plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'

import org.apache.tools.ant.filters.ReplaceTokens

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url = 'https://repo.aikar.co/content/groups/aikar/'
    }

    maven {
        url = 'https://ci.ender.zone/plugin/repository/everything/'
    }

    maven {
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }

    maven {
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        url = 'http://repo.dmulloy2.net/nexus/repository/public/'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')

    compile 'co.aikar:taskchain-bukkit:3.7.2'
    compile 'com.zaxxer:HikariCP:3.3.1'
    compile 'org.slf4j:slf4j-api:2.0.0-alpha0'
    compile 'org.jetbrains:annotations:16.0.2'

    compileOnly 'net.ess3:EssentialsX:2.16.0'
    compileOnly 'org.spigotmc:spigot:1.15-R0.1-SNAPSHOT'
    compileOnly 'com.comphenix.protocol:ProtocolLib-API:4.4.0'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
}

def pluginName = project.name
def spigotDirectory = "Spigot 1.13"

group = 'me.droreo002'
version = '13.2'
description = 'OreoCore plugin!'
targetCompatibility = '1.8'

shadowJar {
    archiveFileName = pluginName + '-' + project.version + '.jar'
    destinationDirectory = file("C:\\Users\\Anom\\Desktop\\" + spigotDirectory + "\\plugins")

    mergeServiceFiles()
    dependencies {
        include(dependency('co.aikar:.*'))
        include(dependency('com.zaxxer:.*'))
        include(dependency('org.slf4j:.*'))
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        filter(ReplaceTokens, tokens: [version: project.version])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
